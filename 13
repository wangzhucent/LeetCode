class Solution {
public:
    int romanToInt(string s) {
        unordered_map <string,int> mymap;
        mymap["I"]=1;
        mymap["V"]=5;
        mymap["X"]=10;
        mymap["L"]=50;
        mymap["C"]=100;
        mymap["D"]=500;
        mymap["M"]=1000;
        int i=0;
        string str;
        char ch;
        int output=0;
        int temp=0;
        for (i=0;i!=s.size();i++)
        {
            cout<<i<<" "<<temp<<endl;
            if (i==0)
                temp=temp+mymap[s.substr(i,1)];
            else 
            {
                if (mymap[s.substr(i,1)]>mymap[s.substr(i-1,1)])
                {
                    temp=-temp+mymap[s.substr(i,1)];
                }
                else if (s[i]==s[i-1])
                {
                    temp=temp+mymap[s.substr(i,1)];
                }
                else
                {
                    output=output+temp;
                    temp=mymap[s.substr(i,1)];
                }
                
            }
        }
        output=output+temp;
        return output;   
    }
};
